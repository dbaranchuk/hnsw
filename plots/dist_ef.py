synthetic_100m_1m_smart ='''1	0.0732	23.9903 us	153.21 dcs
2	0.1418	36.6307 us	197.516 dcs
3	0.1901	42.5949 us	231.236 dcs
4	0.2302	49.0112 us	260.949 dcs
5	0.2642	55.4009 us	288.737 dcs
6	0.2901	62.3252 us	313.071 dcs
7	0.3155	68.0781 us	337.19 dcs
8	0.3351	77.5749 us	360.33 dcs
9	0.3506	80.8925 us	381.968 dcs
10	0.3655	84.6293 us	403.169 dcs
11	0.38	87.8972 us	423.085 dcs
12	0.3906	91.8036 us	442.712 dcs
13	0.4021	97.1528 us	462.55 dcs
14	0.4145	101.474 us	481.652 dcs
15	0.4262	109.598 us	500.576 dcs
16	0.435	112.679 us	518.538 dcs
17	0.4439	116.222 us	536.226 dcs
18	0.452	119.854 us	553.943 dcs
19	0.4584	124.017 us	571.165 dcs
20	0.4645	129.904 us	588.371 dcs
21	0.4724	136.967 us	605.32 dcs
22	0.4788	139.381 us	622.33 dcs
23	0.486	141.484 us	639.513 dcs
24	0.4913	145.83 us	656.152 dcs
25	0.4952	149.344 us	671.938 dcs
26	0.5016	153.76 us	687.911 dcs
27	0.5062	157.731 us	704.947 dcs
28	0.5101	165.49 us	720.714 dcs
29	0.5141	165.505 us	736.589 dcs
30	0.5181	169.71 us	752.558 dcs
40	0.5507	210.646 us	907.484 dcs
50	0.5756	249.232 us	1058.57 dcs
60	0.5952	285.682 us	1205.42 dcs
70	0.6111	326.324 us	1349.08 dcs
80	0.6235	360.387 us	1491.59 dcs
90	0.6333	400.802 us	1631.51 dcs
100	0.6423	429.85 us	1771.45 dcs
140	0.667	570.487 us	2314.77 dcs
180	0.6841	716.258 us	2839.26 dcs
220	0.6973	859.057 us	3348.39 dcs
260	0.7076	997.197 us	3844.79 dcs
300	0.7136	1120.34 us	4331.65 dcs
340	0.7202	1255.41 us	4808.18 dcs
380	0.7265	1409.25 us	5275.81 dcs
420	0.7314	1535.89 us	5737.1 dcs
460	0.7344	1655.15 us	6191.55 dcs
'''

synthetic_100m_1m_hnsw = '''
1	0.0995	153.829 us	209.44 dcs
2	0.156	73.2369 us	251.871 dcs
3	0.2029	66.8471 us	286.136 dcs
4	0.2401	74.4415 us	316.837 dcs
5	0.2719	75.4829 us	344.108 dcs
6	0.299	82.5544 us	369.897 dcs
7	0.3234	88.3521 us	393.986 dcs
8	0.3429	93.4811 us	416.699 dcs
9	0.3595	104.51 us	438.156 dcs
10	0.375	102.916 us	459.594 dcs
11	0.388	108.64 us	480.603 dcs
12	0.4015	113.309 us	501.044 dcs
13	0.4114	119.003 us	519.97 dcs
14	0.4193	124.79 us	538.58 dcs
15	0.4276	126.866 us	556.976 dcs
16	0.4368	137.854 us	575.238 dcs
17	0.4446	135.57 us	592.813 dcs
18	0.453	140.332 us	611.091 dcs
19	0.4599	145.643 us	628.356 dcs
20	0.4677	149.233 us	645.099 dcs
21	0.4766	153.065 us	662.704 dcs
22	0.4827	164.05 us	679.559 dcs
23	0.4874	164.348 us	696.657 dcs
24	0.4935	257.23 us	713.416 dcs
25	0.4985	170.776 us	730.237 dcs
26	0.5044	174.274 us	747.118 dcs
27	0.5093	180.012 us	763.233 dcs
28	0.5139	182.14 us	779.35 dcs
29	0.5184	192.515 us	795.2 dcs
30	0.5225	189.897 us	810.903 dcs
40	0.5575	231.858 us	967.238 dcs
50	0.5803	267.555 us	1117.24 dcs
60	0.5984	306.408 us	1265.03 dcs
70	0.6153	341.504 us	1410.66 dcs
80	0.6258	385.081 us	1553.2 dcs
90	0.6357	415.085 us	1695.07 dcs
100	0.6434	449.798 us	1834.99 dcs
140	0.6663	590.815 us	2377.79 dcs
180	0.6848	728.464 us	2904.92 dcs
220	0.6987	865.073 us	3415.25 dcs
260	0.7064	999.249 us	3913.95 dcs
300	0.7142	1139.42 us	4402.16 dcs
340	0.7204	1273.03 us	4879.26 dcs
380	0.7252	1402.84 us	5349.45 dcs
420	0.7298	1531.19 us	5811.14 dcs
460	0.7329	1658.7 us	6267.21 dcs
'''

import matplotlib.pyplot as plt
import numpy
import re

M = 100

splitted_smart = re.findall(r"[0-9.]+", synthetic_100m_1m_smart)
splitted_hnsw = re.findall(r"[0-9.]+", synthetic_100m_1m_hnsw)

ef = range(1,30) + range(30, 100, 10) + range(100, 500, 40)


smart_dcs = splitted_smart[3::4]
hnsw_dcs = splitted_hnsw[3::4]

plt.plot(ef, smart_dcs, 'r--')
plt.plot(ef, hnsw_dcs)
plt.axis([1, 460, 0, 7000])
plt.xlabel('Ef', fontsize=14)
plt.ylabel('Distance Count', fontsize=14)
plt.text(ef[-1]+1, float(smart_dcs[-1])-50, 'Smart HNSW', fontsize=11, color=(1,0,0))
plt.text(ef[-1]+1, float(hnsw_dcs[-1])+50, 'HNSW', fontsize=11, color=(0,0,1))
plt.title('SIFT ' + str(M) + 'M M16 Distance Count/Ef')
plt.savefig('dist_ef_sift' + str(M) + 'M_M16_1m.png')
#plt.s:ow()
